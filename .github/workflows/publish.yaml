name: Release

on:
  push:
    branches:
      - "master"

jobs:
  tag:
    name: Check and Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create tag
        id: tag
        uses: butlerlogic/action-autotag@1.1.2
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          strategy: package # Optional, since "package" is the default strategy
          tag_prefix: "v"
    outputs:
      tag: ${{ steps.tag.outputs.tagname }}
      tagsha: ${{ steps.tag.outputs.tagsha }}

  release:
    name: Release App
    runs-on: ubuntu-latest
    needs: tag
    if: needs.tag.outputs.tag != ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          output: CHANGELOG.md
          issues: false
          futureRelease: ${{ needs.tag.outputs.tag }}

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ needs.tag.outputs.tag }}
          path: ./CHANGELOG.md

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.tag.outputs.tag }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          release_name: Release ${{ needs.tag.outputs.tag }}

      - name: Push docker image to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          repository: nodefactoryio/ryu-backend
          tags: latest,${{ needs.tag.outputs.tag }}
          push: true

      - name: Create Deployment
        uses: avakar/create-deployment@v1
        id: deploy
        with:
          ref: 'refs/tags/${{ needs.tag.outputs.tag }}'
          auto_merge: false
          required_contexts: ""
          description: "Deployed version ${{ needs.tag.outputs.tag }} of ryu-backend to staging"
          payload: ${{ toJSON(needs.tag.outputs.tag) }}
          environment: 'staging'
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_GITHUB_TOKEN }}

      - name: Get the deplopyment ID
        run: echo "The deployment ID was ${{ steps.deploy.outputs.id }}"


      #in case of failure
      - name: Rollback on failure
        if: failure()
        uses: author/action-rollback@9ec72a6af74774e00343c6de3e946b0901c23013
        with:
          id: ${{ steps.create_release.outputs.id }}
          tag: ${{ needs.tag.outputs.tag }}
          delete_orphan_tag: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}